# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Conference {
  """The id of the conference"""
  id: String!

  """The id of the meeting associated with the conference"""
  meetingId: String!
}

type User {
  """The id of the user"""
  id: String!

  """The email of the user"""
  email: String!

  """The name of the user"""
  name: String!

  """The biography of the user"""
  biography: String

  """The meetings of the user"""
  meetings: [Meeting!]!
}

type Meeting {
  """The id of the meeting"""
  id: String!

  """The title of the meeting"""
  title: String!

  """The description of the meeting"""
  description: String

  """The start date of the meeting"""
  startDate: DateTime!

  """The end date of the meeting"""
  endDate: DateTime!

  """The hoster of the meeting"""
  host: User!

  """The conference associated with the meeting"""
  conference: Conference
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ConferenceAccess {
  """The conference the url is for"""
  conferenceId: String!

  """The access url to join a conference"""
  url: String!
}

type Query {
  meetings(searchMeetingInput: SearchCriteriaInput!): [Meeting!]!
  myMeetings(searchMeetingInput: SearchCriteriaInput!): [Meeting!]!
  meeting(id: String!): Meeting!
  users: [User!]!
  user(id: String!): User!
  currentUser: User!
  conference(id: String!): Conference!
  conferenceByMeeting(meetingId: String!): Conference
  conferenceAccess(conferenceId: String!): ConferenceAccess!
}

input SearchCriteriaInput {
  """The value to search for in meetings"""
  searchValue: String!

  """The start date order by direction for in meetings"""
  startDateOrderBy: OrderBy!

  """The from date to filter meetings"""
  fromDate: DateTime

  """The to date to filter meetings"""
  toDate: DateTime
}

"""The order by direction"""
enum OrderBy {
  ASC
  DESC
}

type Mutation {
  createMeeting(createMeetingInput: CreateMeetingInput!): Meeting!
  updateMeeting(updateMeetingInput: UpdateMeetingInput!): Meeting!
  removeMeeting(id: String!): Boolean!
  updateUser(updateUserInput: UpdateUserInput!): User!
  updateCurrentUser(updateCurrentUserInput: UpdateCurrentUserInput!): User!
  createConference(createConferenceInput: CreateConferenceInput!): Conference!
}

input CreateMeetingInput {
  """The title of the meeting"""
  title: String!

  """The description of the meeting"""
  description: String

  """The start date of the meeting"""
  startDate: DateTime!

  """The end date of the meeting"""
  endDate: DateTime!
}

input UpdateMeetingInput {
  """The title of the meeting"""
  title: String

  """The description of the meeting"""
  description: String

  """The start date of the meeting"""
  startDate: DateTime

  """The end date of the meeting"""
  endDate: DateTime

  """The id of the meeting"""
  id: String!
}

input UpdateUserInput {
  """The id of the user"""
  id: String!

  """The email of the user"""
  email: String!

  """The name of the user"""
  name: String!

  """The biography of the user"""
  biography: String
}

input UpdateCurrentUserInput {
  """The email of the user"""
  email: String!

  """The name of the user"""
  name: String!

  """The biography of the user"""
  biography: String
}

input CreateConferenceInput {
  """The id of the meeting to create a conference for."""
  meetingId: String!
}
